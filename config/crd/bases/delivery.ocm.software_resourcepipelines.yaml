---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: resourcepipelines.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: ResourcePipeline
    listKind: ResourcePipelineList
    plural: resourcepipelines
    singular: resourcepipeline
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ResourcePipeline is the Schema for the resourcepipelines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourcePipelineSpec defines the desired state of ResourcePipeline
            properties:
              deliverySpec:
                description: DeliverySpec holds a set of targets onto which the pipeline
                  output will be deployed.
                properties:
                  targets:
                    items:
                      description: WasmStep defines the name version and location
                        of a wasm module that is stored// in an ocm component. The
                        format of the module name must be <component-name>:<component-version>@<resource-name>.
                        Optionally a registry address can be specified.
                      properties:
                        module:
                          pattern: ^([A-Za-z0-9\.\/]+):(v[0-9\.]+)@([a-z]+)$
                          type: string
                        name:
                          type: string
                        registry:
                          default: ghcr.io/open-component-model/delivery
                          type: string
                        values:
                          description: SECRET_STORE SECRET_VALUE_NAME ( S3_TOKEN )
                            Take a peak at Tekton.
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - module
                      - name
                      type: object
                    type: array
                required:
                - targets
                type: object
              interval:
                type: string
              parameters:
                x-kubernetes-preserve-unknown-fields: true
              pipelineSpec:
                description: PipelineSpec holds the steps that constitute the pipeline.
                properties:
                  steps:
                    items:
                      description: WasmStep defines the name version and location
                        of a wasm module that is stored// in an ocm component. The
                        format of the module name must be <component-name>:<component-version>@<resource-name>.
                        Optionally a registry address can be specified.
                      properties:
                        module:
                          pattern: ^([A-Za-z0-9\.\/]+):(v[0-9\.]+)@([a-z]+)$
                          type: string
                        name:
                          type: string
                        registry:
                          default: ghcr.io/open-component-model/delivery
                          type: string
                        values:
                          description: SECRET_STORE SECRET_VALUE_NAME ( S3_TOKEN )
                            Take a peak at Tekton.
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - module
                      - name
                      type: object
                    type: array
                required:
                - steps
                type: object
              secrets:
                additionalProperties:
                  description: ResourcePipelineSecretSpec specifies access to a secret
                    resource that can be used within either the pipeline or delivery
                    stages.
                  properties:
                    secretStoreRef:
                      description: NamespacedObjectReference contains enough information
                        to locate the referenced Kubernetes resource object in any
                        namespace.
                      properties:
                        name:
                          description: Name of the referent.
                          type: string
                        namespace:
                          description: Namespace of the referent, when not specified
                            it acts as LocalObjectReference.
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - secretStoreRef
                  type: object
                type: object
              serviceAccountName:
                type: string
              sourceRef:
                description: ResourcePipelineSource defines the component version
                  and resource which will be processed by the pipeline.
                properties:
                  name:
                    type: string
                  namespace:
                    type: string
                  resource:
                    type: string
                required:
                - name
                - resource
                type: object
            required:
            - interval
            - sourceRef
            type: object
          status:
            description: ResourcePipelineStatus defines the observed state of ResourcePipeline
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
