---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: componentversions.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: ComponentVersion
    listKind: ComponentVersionList
    plural: componentversions
    shortNames:
    - cv
    singular: componentversion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.reconciledVersion
      name: Version
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComponentVersion is the Schema for the ComponentVersions API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ComponentVersionSpec specifies the configuration required to retrieve a
              component descriptor for a component version.
            properties:
              component:
                description: Component specifies the name of the ComponentVersion.
                type: string
              interval:
                description: Interval specifies the interval at which the Repository
                  will be checked for updates.
                type: string
              references:
                description: References specifies configuration for the handling of
                  nested component references.
                properties:
                  expand:
                    description: |-
                      Expand specifies if a Kubernetes API resource of kind ComponentDescriptor should
                      be generated for each component reference that is present in the root ComponentVersion.
                    type: boolean
                type: object
              repository:
                description: |-
                  Repository provides details about the OCI repository from which the component
                  descriptor can be retrieved.
                properties:
                  secretRef:
                    description: SecretRef specifies the credentials used to access
                      the OCI registry.
                    properties:
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          TODO: Add other useful fields. apiVersion, kind, uid?
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  url:
                    description: |-
                      URL specifies the URL of the OCI registry in which the ComponentVersion is stored.
                      MUST NOT CONTAIN THE SCHEME.
                    type: string
                required:
                - url
                type: object
              serviceAccountName:
                description: |-
                  ServiceAccountName can be used to configure access to both destination and source repositories.
                  If service account is defined, it's usually redundant to define access to either source or destination, but
                  it is still allowed to do so.
                  https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account
                type: string
              suspend:
                description: Suspend can be used to temporarily pause the reconciliation
                  of the ComponentVersion resource.
                type: boolean
              verify:
                description: |-
                  Verify specifies a list signatures that should be validated before the ComponentVersion
                  is marked Verified.
                items:
                  description: Signature defines the details of a signature to use
                    for verification.
                  properties:
                    name:
                      description: |-
                        Name specifies the name of the signature. An OCM component may have multiple
                        signatures.
                      type: string
                    publicKey:
                      description: |-
                        PublicKey provides a reference to a Kubernetes Secret of contain a blob of a public key that
                        which will be used to validate the named signature.
                      properties:
                        secretRef:
                          description: SecretRef is a reference to a Secret that contains
                            a public key.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        value:
                          description: Value defines a PEM/base64 encoded public key
                            value.
                          type: string
                      type: object
                  required:
                  - name
                  - publicKey
                  type: object
                type: array
              version:
                description: Version specifies the version information for the ComponentVersion.
                properties:
                  semver:
                    description: Semver specifies a semantic version constraint for
                      the Component Version.
                    type: string
                type: object
            required:
            - component
            - interval
            - repository
            - version
            type: object
          status:
            description: ComponentVersionStatus defines the observed state of ComponentVersion.
            properties:
              componentDescriptor:
                description: ComponentDescriptor holds the ComponentDescriptor information
                  for the ComponentVersion.
                properties:
                  componentDescriptorRef:
                    description: |-
                      ComponentDescriptorRef specifies the reference for the Kubernetes object representing
                      the ComponentDescriptor.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - name
                    type: object
                  extraIdentity:
                    additionalProperties:
                      type: string
                    description: ExtraIdentity specifies additional identity attributes
                      of the referenced component.
                    type: object
                  name:
                    description: Name specifies the name of the referenced component.
                    type: string
                  references:
                    description: References is a list of component references.
                    x-kubernetes-preserve-unknown-fields: true
                  version:
                    description: Version specifies the version of the referenced component.
                    type: string
                required:
                - name
                - version
                type: object
              conditions:
                description: Conditions holds the conditions for the ComponentVersion.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: ObservedGeneration is the last reconciled generation.
                format: int64
                type: integer
              reconciledVersion:
                description: ReconciledVersion is a string containing the version
                  of the latest reconciled ComponentVersion.
                type: string
              verified:
                description: Verified is a boolean indicating whether all the specified
                  signatures have been verified and are valid.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
