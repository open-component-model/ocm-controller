---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: componentversions.delivery.ocm.software
spec:
  group: delivery.ocm.software
  names:
    kind: ComponentVersion
    listKind: ComponentVersionList
    plural: componentversions
    singular: componentversion
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ComponentVersion is the Schema for the ComponentVersions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComponentVersionSpec defines the desired state of ComponentVersion
            properties:
              component:
                description: 'Every Component Version has a name. Name and version
                  are the identifier for a Component Version and therefor for the
                  artifact set described by it. A component name SHOULD reference
                  a location where the componentâ€™s resources (typically source code,
                  and/or documentation) are hosted. It MUST be a DNS compliant name
                  with lowercase characters and MUST contain a name after the domain.
                  Examples: - github.com/pathToYourRepo'
                type: string
              interval:
                type: string
              references:
                properties:
                  expand:
                    type: boolean
                type: object
              repository:
                description: Repository defines the OCM Repository.
                properties:
                  secretRef:
                    description: SecretRef is a reference to a secret used to access
                      the OCI repository.
                    properties:
                      name:
                        type: string
                    required:
                    - name
                    type: object
                  url:
                    description: 'TODO@souleb: do we need a scheme for the url? add
                      description for each field Do we need a type field? (e.g. oci,
                      git, s3, etc.)'
                    type: string
                required:
                - secretRef
                - url
                type: object
              verify:
                items:
                  description: Signature defines the details of a signature to use
                    for verification.
                  properties:
                    name:
                      description: Name of the signature.
                      type: string
                    publicKey:
                      description: Key which is used for verification.
                      properties:
                        secretRef:
                          description: SecretRef is a reference to a secret used to
                            access the OCI repository.
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                      required:
                      - secretRef
                      type: object
                  required:
                  - name
                  - publicKey
                  type: object
                type: array
              version:
                description: Component versions refer to specific snapshots of a component.
                  A common scenario being the release of a component.
                properties:
                  semver:
                    type: string
                type: object
            required:
            - component
            - interval
            - repository
            - version
            type: object
          status:
            description: ComponentVersionStatus defines the observed state of ComponentVersion
            properties:
              componentDescriptor:
                description: Reference contains all referred components and their
                  versions.
                properties:
                  componentDescriptorRef:
                    description: NamespacedObjectReference contains enough information
                      to locate the referenced Kubernetes resource object in any namespace.
                    properties:
                      name:
                        description: Name of the referent.
                        type: string
                      namespace:
                        description: Namespace of the referent, when not specified
                          it acts as LocalObjectReference.
                        type: string
                    required:
                    - name
                    type: object
                  extraIdentity:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                  references:
                    x-kubernetes-preserve-unknown-fields: true
                  version:
                    type: string
                required:
                - name
                - version
                type: object
              reconciledVersion:
                type: string
              verified:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
